plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'com.google.cloud.tools.jib' version '3.4.2'
}

group = 'com.flip'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    implementation 'com.auth0:java-jwt:4.0.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
}

jib {
    from {
        image = "openjdk:17-jre-slim"
    }
    to {
        image = System.getenv("DOCKERHUB_REPO") ?: ""
        tags = [System.getenv("SHORT_SHA")]
    }

    container {
        jvmFlags = ["-Duser.timezone=Asia/Seoul"]
        environment = [
                "SPRING_PROFILES_ACTIVE": System.getenv("SPRING_PROFILES_ACTIVE"),
                "DATASOURCE_URL"        : System.getenv("DATASOURCE_URL"),
                "DATASOURCE_USERNAME"   : System.getenv("DATASOURCE_USERNAME"),
                "DATASOURCE_PASSWORD"   : System.getenv("DATASOURCE_PASSWORD"),
                "TZ"                    : "Asia/Seoul"
        ]
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
